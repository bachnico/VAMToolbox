name: publish_to_conda

on: push

jobs:
  publish:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    env:
      anaconda_token: ${{ secrets.ANACONDA_TOKEN }}
      DRY_RUN: ${{ github.event.release.prerelease }}  

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            anaconda_osname: win-64
          - os: ubuntu-latest
            anaconda_osname: linux-64

    steps:
      - name: Check if ANACONDA_TOKEN empty
        if: ${{ env.anaconda_token == '' }}
        run: |
          echo 'ANACONDA_TOKEN does not have a value set. Exiting job.'
          exit 1
      - name: Check if ANACONDA_TOKEN filled
        if: ${{ env.anaconda_token != '' }}
        run: |
          echo 'ANACONDA_TOKEN has a value set.'
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
      - name: Install conda-build
        run: |
          conda install -y -c conda-forge anaconda-client conda-build
      - name: Add channels
        run: |
          conda config --add channels conda-forge
          conda config --add channels anaconda 
          conda config --add channels pytorch
          conda config --add channels numba
          conda config --add channels nvidia
          conda config --add channels astra-toolbox
      - name: Build Conda Package
        run: |
          cd conda
          conda build --output-folder . .
          
     - name: Upload to Anaconda
       env:
         anaconda_token: ${{ secrets.ANACONDA_TOKEN }}
       run: |
        ls ./conda/